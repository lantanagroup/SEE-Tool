//+++++++++++++++++++ WARNING ++++++++++++++++++++++++++s
// This file was generated by a tool. DO NOT HAND EDIT!
//++++++++++++++++++++++++++++++++++++++++++++++++++++++
SEE.namespace("SEE.model.dto");
SEE.model.dto.DocumentInfo =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.DocumentInfo';

	self.Title = '';
	self.DateCreated = new Date();
	self.DateModified = new Date();
	self.Patient = new SEE.model.dto.Patient();
	self.DocumentType = 'CDA';
	self.Status = SEE.enum.DocumentStatusCode.DRAFT;
	self.Authors = [];
	self.GroupIdentifier = '';
	self.Header = new SEE.model.dto.HeaderSection();
	self.History = new SEE.model.dto.DocumentHistory();
	self.OtherDocumentIdentificationMetadata = {};
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.DocumentInfo.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.Document =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.Document';

	self.CdaXmlDocument = new SEE.model.dto.CdaXmlDocument();
	self.DocumentInfo = new SEE.model.dto.DocumentInfo();
	self.ProblemSection = new SEE.model.dto.ProblemSection();
	self.VitalsSection = new SEE.model.dto.VitalsSection();
	self.MedicationSection = new SEE.model.dto.MedicationSection();
	self.AdvanceDirectivesSection = new SEE.model.dto.AdvanceDirectivesSection();
	self.AllergiesSection = new SEE.model.dto.AllergySection();
	self.AssessmentSection = new SEE.model.dto.GenericSection();
	self.PhysicalExamSection = new SEE.model.dto.GenericSection();
	self.ChiefComplaintSection = new SEE.model.dto.GenericSection();
	self.EncounterSection = new SEE.model.dto.EncountersSection();
	self.FamilyHistorySection = new SEE.model.dto.GenericSection();
	self.FunctionalStatusSection = new SEE.model.dto.FunctionalStatusSection();
	self.HistoryOfPresentIllnessSection = new SEE.model.dto.GenericSection();
	self.HistoryOfPastIllnessSection = new SEE.model.dto.PastIllnessSection();
	self.HospitalDischargeDiagnosisSection = new SEE.model.dto.DischargeDiagnosisSection();
	self.ImmunizationSection = new SEE.model.dto.GenericSection();
	self.MedicalEquipmentSection = new SEE.model.dto.MedicalEquipmentSection();
	self.PayerSection = new SEE.model.dto.PayerSection();
	self.PlanOfCareSection = new SEE.model.dto.PlanOfCareSection();
	self.ProceduresSection = new SEE.model.dto.GenericSection();
	self.ResultsSection = new SEE.model.dto.ResultsSection();
	self.SocialHistorySection = new SEE.model.dto.GenericSection();
	self.OtherSections = [];
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.Document.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.CdaXmlDocument =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.CdaXmlDocument';

	self.Xml = '';
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.CdaXmlDocument.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.User =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.User';

	self.UserName = '';
	self.MRU = [];
	self.GroupIdentifier = '';
	self.Mailbox = '';
	self.csrfToken = '';
	self.PersonInfo = new SEE.model.dto.PersonInfo();
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.User.inheritsFrom(SEE.model.BaseModel);
//#########################################################


SEE.model.dto.AssigningAuthorityListEntry =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.AssigningAuthorityListEntry';

	self.GroupIdentifier = '';
	self.Name = '';
	self.Root = '';
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.AssigningAuthorityListEntry.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.DocumentSkeleton =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.DocumentSkeleton';

	self.Xml = '';
	self.Name = '';
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.DocumentSkeleton.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.Patient =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.Patient';

	self.PersonInfo = new SEE.model.dto.PersonInfo();
	self.BirthTime = ko.observable();
	self.GenderCode = ko.observable('');
	self.RaceCode = ko.observable('');
	self.EthnicityCode = ko.observable('');
	self.PrimaryLanguageCode = ko.observable('');
	self.OtherLanguageCode = ko.observable('');
	self.MaritalStatusCode = ko.observable('');
	self.ReligionCode = ko.observable('');
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.Patient.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.PersonInfo =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.PersonInfo';

	self.StreetAddress = ko.observable('');
	self.City = ko.observable('');
	self.State = ko.observable('');
	self.ZipCode = ko.observable('');
	self.Country = ko.observable('US');
	self.Phone = ko.observable('');
	self.AltPhone = ko.observable('');
	self.Pager = ko.observable('');
	self.Email = ko.observable('');
	self.NPI = ko.observable('');
	self.FirstName = ko.observable('');
	self.LastName = ko.observable('');
	self.Specialty = ko.observable('');
    self.Suffix = ko.observable('');
    self.Credentials = ko.observable('');
	self.RelationshipToPatient = ko.observable('');
	self.Identifiers = ko.observableArray([]);
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.PersonInfo.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.OrganizationInfo =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.OrganizationInfo';

	self.Id = ko.observable(SEE.util.GUID());
	self.StreetAddress = ko.observable('');
	self.City = ko.observable('');
	self.State = ko.observable('');
	self.ZipCode = ko.observable('');
	self.Phone = ko.observable('');
	self.AltPhone = ko.observable('');
	self.Email = ko.observable('');
	self.Name = ko.observable('');
    self.GroupIdentifier = ko.observable('');
	self.Identifiers = ko.observableArray([]);
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.OrganizationInfo.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.ProblemSectionProblem =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.ProblemSectionProblem';

	self.id = ko.observable(SEE.util.GUID());
	self.Author = ko.observable(new SEE.model.dto.Author());
	self.Name = ko.observable();
	self.Code = ko.observable();
	self.DateOfOnset = ko.observable(new Date());
	self.ResolutionDate = ko.observable(new Date());
	self.Diagnoser = ko.observable(new SEE.model.dto.PersonInfo());
	self.ClinicianToCall = ko.observable(new SEE.model.dto.PersonInfo());
	self.CurrentSeverity = ko.observable();
	self.CurrentSeverityName = ko.observable();
	self.WorstSeverity = ko.observable();
	self.WorstSeverityName = ko.observable();
	self.ProblemFindings = ko.observableArray([]);
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.ProblemSectionProblem.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.ProblemFinding =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.ProblemFinding';

	self.Name = ko.observable();
	self.Code = ko.observable();
	self.id = SEE.util.GUID();
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.ProblemFinding.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.SnomedProblem =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.SnomedProblem';

	self.SNOMED_CID = '';
	self.SNOMED_FSN = '';
	self.SNOMED_CONCEPT_STATUS = '';
	self.UMLS_CUI = '';
	self.OCCURRENCE = '';
	self.USAGE = '';
	self.FIRST_IN_SUBSET = '';
	self.IS_RETIRED_FROM_SUBSET = '';
	self.LAST_IN_SUBSET = '';
	self.REPLACED_BY_SNOMED_CID = '';
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.SnomedProblem.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.ProblemSection =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.ProblemSection';

	self.LifeThreateningConditionPresent = ko.observable(false);
	self.DSM_AXIS_1 = ko.observable('');
	self.DSM_AXIS_2 = ko.observable('');
	self.DSM_AXIS_3 = ko.observable('');
	self.DSM_AXIS_4 = ko.observable('');
	self.Problems = ko.observableArray([]);
	self.FreeNarrative = ko.observable('');
	self.GeneratedNarrative = ko.observable('');
	self.TransformedNarrative = ko.observable('');
	self.Title = ko.observable('PROBLEMS');
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.ProblemSection.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.PayerSection =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.PayerSection';

	self.PayerPolicies = ko.observableArray([]);
	self.FreeNarrative = ko.observable('');
	self.GeneratedNarrative = ko.observable('');
	self.TransformedNarrative = ko.observable('');
	self.Author = new SEE.model.dto.Author();
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.PayerSection.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.PayerPolicy =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.PayerPolicy';

	self.id = ko.observable(SEE.util.GUID());
	self.InsurerName = ko.observable();
	self.InsurerPhone = ko.observable('');
	self.PolicyNumber = ko.observable('');
	self.InsuranceType = ko.observable('');
	self.MemberNumber = ko.observable('');
	self.PolicyDetails = ko.observable('');
	self.Guarantor = ko.observable('');
	self.Author = ko.observable('');
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.PayerPolicy.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.ResultsSection =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.ResultsSection';

	self.LabResults = ko.observableArray([]);
	self.OtherLabResults = ko.observableArray([]);
	self.FreeNarrative = ko.observable('');
	self.GeneratedNarrative = ko.observable('');
	self.TransformedNarrative = ko.observable('');
	self.Author = new SEE.model.dto.Author();
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.ResultsSection.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.LabResult =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.LabResult';

	self.id = ko.observable(SEE.util.GUID());
	self.Name = ko.observable('');
	self.Value = ko.observable('');
	self.Unit = ko.observable('');
	self.DateObserved = ko.observable('');
	self.Author = ko.observable(new SEE.model.dto.Author());
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.LabResult.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.EncountersSection =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.EncountersSection';

	self.NumberofEDVisits = ko.observable('');
	self.LastEDVisit = ko.observable('');
	self.FreeNarrative = ko.observable('');
	self.GeneratedNarrative = ko.observable('');
	self.TransformedNarrative = ko.observable('');
	self.Author = new SEE.model.dto.Author();
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.EncountersSection.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.Author =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.Author';

	self.FirstName = ko.observable();
	self.LastName = ko.observable('');
	self.UserName = ko.observable('');
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.Author.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.VitalsSection =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.VitalsSection';

	self.Vitals = ko.observableArray([]);
	self.FreeNarrative = ko.observable('');
	self.GeneratedNarrative = ko.observable('');
	self.TransformedNarrative = ko.observable('');
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.VitalsSection.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.VitalSignEntry =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.VitalSignEntry';

	self.id = ko.observable(SEE.util.GUID());
	self.Author = ko.observable(new SEE.model.dto.Author());
	self.DateRecorded = ko.observable(new Date());
	self.DateRecordedComment = ko.observable('');
	self.Height = ko.observable('');
	self.HeightUnit = ko.observable('');
	self.HeightComment = ko.observable('');
	self.Weight = ko.observable('');
	self.WeightUnit = ko.observable('');
	self.WeightComment = ko.observable('');
	self.BMI = ko.observable('');
	self.BMIComment = ko.observable('');
	self.SystolicBP = ko.observable('');
	self.SystolicBPComment = ko.observable('');
	self.DiastolicBP = ko.observable('');
	self.DiastolicBPComment = ko.observable('');
	self.HeartRate = ko.observable('');
	self.HeartRateComment = ko.observable('');
	self.RespiratoryRate = ko.observable('');
	self.RespiratoryRateComment = ko.observable('');
	self.HeartRhythmValue = ko.observable('');
	self.HeartRhythmComment = ko.observable('');
	self.O2Sat = ko.observable('');
	self.O2SatComment = ko.observable('');
	self.Temperature = ko.observable('');
	self.TemperatureUnit = ko.observable('');
	self.TemperatureComment = ko.observable('');
	self.HeartRhythmName = ko.observable('');
	self.HeartRhythmComment = ko.observable('');
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.VitalSignEntry.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.MedicationSection =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.MedicationSection';

	self.Medications = ko.observableArray([]);
	self.MedicationExclusions = ko.observableArray([]);
	self.FreeNarrative = ko.observable('');
	self.GeneratedNarrative = ko.observable('');
	self.TransformedNarrative = ko.observable('');
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.MedicationSection.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.MedicationEntry =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.MedicationEntry';

	self.id = ko.observable(SEE.util.GUID());
	self.Author = ko.observable(new SEE.model.dto.Author());
	self.DrugCode = ko.observable('');
	self.DrugName = ko.observable('');
	self.IndicationCode = ko.observable('');
	self.IndicationName = ko.observable('');
	self.Prescriber = ko.observable(new SEE.model.dto.PersonInfo());
	self.StartDate = ko.observable(new Date());
	self.EndDate = ko.observable(new Date());
	self.RouteCode = ko.observable('');
	self.RouteName = ko.observable('');
	self.Dose = ko.observable('');
	self.Frequency = ko.observable('');
	self.CurrentActive = ko.observable(false);
	self.Preadmission = ko.observable(false);
	self.Admission = ko.observable(false);
	self.Discharge = ko.observable(false);
	self.WarfarinTargetINR = ko.observable('');
	self.WarfarinPrescriberForDoseChanges = ko.observable(new SEE.model.dto.PersonInfo());
	self.WarfarinHasClinicianAgreedToManage = ko.observable(false);
	self.WarfarinLast3Doses = ko.observable('');
	self.WarfarinRecommendedNextDose = ko.observable('');
	self.WarfarinTimingNextDose = ko.observable('');
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.MedicationEntry.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.MedicationExclusionEntry =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.MedicationExclusionEntry';

	self.id = ko.observable(SEE.util.GUID());
	self.Author = ko.observable(new SEE.model.dto.Author());
	self.DrugCode = ko.observable('');
	self.DrugName = ko.observable('');
	self.IndicationCode = ko.observable('');
	self.IndicationName = ko.observable('');
	self.Prescriber = ko.observable(new SEE.model.dto.PersonInfo());
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.MedicationExclusionEntry.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.FunctionalStatusSection =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.FunctionalStatusSection';

	self.Capabilities = ko.observableArray([]);
	self.PainScales = ko.observableArray([]);
	self.Cognitions = ko.observableArray([]);
	self.DailyLivings = ko.observableArray([]);
	self.SpecialAlerts = ko.observableArray([]);
	self.GAFScore = ko.observable('');
	self.FreeNarrative = ko.observable('');
	self.GeneratedNarrative = ko.observable('');
	self.TransformedNarrative = ko.observable('');
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.FunctionalStatusSection.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.FunctionalStatusEntry =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.FunctionalStatusEntry';

	self.id = ko.observable(SEE.util.GUID());
	self.Author = ko.observable(new SEE.model.dto.Author());
	self.Name = ko.observable('');
	self.Value = ko.observable('');
	self.EffectiveTime = ko.observable(new Date());
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.FunctionalStatusEntry.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.FunctionalStatusPainScaleEntry =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.FunctionalStatusPainScaleEntry';

	self.id = ko.observable(SEE.util.GUID());
	self.PainScore = ko.observable('');
	self.PainScoreEffectiveTime = ko.observable(new Date());
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.FunctionalStatusPainScaleEntry.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.GenericSection =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.GenericSection';

	self.Title = '';
	self.ParentPropertyName = '';
	self.FreeNarrative = ko.observable('');
	self.TransformedNarrative = ko.observable('');
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.GenericSection.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.HeaderSection =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.HeaderSection';

	self.DocumentID = ko.observable('');
	self.EncounterTime = ko.observable(new Date());
	self.DatePatientArrivedAtSendingSite = ko.observable(new Date());
	self.SendingSite = ko.observable(new SEE.model.dto.OrganizationInfo());
	self.ClinicianToContactWithQuestions = ko.observable(new SEE.model.dto.PersonInfo());
	self.ReceivingSiteSentTo = ko.observable('');
	self.ConfidentialityCode = ko.observable('N');
	self.Patient = ko.observable(new SEE.model.dto.Patient());
	self.Authors = ko.observableArray([new SEE.model.dto.PersonInfo()]);
	self.NextOfKin = ko.observable(new SEE.model.dto.PersonInfo());
	self.PrimaryCareGiverAtHome = ko.observable(new SEE.model.dto.PersonInfo());
	self.Guardian = ko.observable(new SEE.model.dto.PersonInfo());
	self.PrincipleCarePhysician = ko.observable(new SEE.model.dto.PersonInfo());
	self.CarePlanManager = ko.observable(new SEE.model.dto.PersonInfo());
	self.PrincipleHealthCareProvider = ko.observable(new SEE.model.dto.PersonInfo());
	self.PrincipleCareGiver = ko.observable(new SEE.model.dto.PersonInfo());
	self.OtherMembersOfCareTeam = ko.observableArray([]);
	self.Custodian = ko.observable(new SEE.model.dto.OrganizationInfo());
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.HeaderSection.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.SocialHistorySection =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.SocialHistorySection';

	self.Author = ko.observable(new SEE.model.dto.Author());
	self.PatientLikesDislikes = ko.observable('');
	self.PatientExpectations = ko.observable('');
	self.ReligiousCulturalIssues = ko.observable('');
	self.InadequateCommunitySupport = ko.observable(false);
	self.FamilyNotInvolvedInCare = ko.observable(false);
	self.Smoking = ko.observable('');
	self.Alcohol = ko.observable('');
	self.DrugUse = ko.observable('');
	self.LifetimeRadiationExposure = ko.observable('');
	self.RiskySexualBehavior = ko.observable('');
	self.WorkplaceExposures = ko.observable('');
	self.OtherExposures = ko.observable('');
	self.HousingStatus = ko.observable('');
	self.Readmission = ko.observable('');
	self.Skin = ko.observable('');
	self.Falls = ko.observable('');
	self.MedError = ko.observable('');
	self.CarePlanFailure = ko.observable('');
	self.EnvironmentalFactors = ko.observable('');
	self.EnvironmentalRisksDecisionModifiers = ko.observable('');
	self.LastHospitalAdmission = ko.observable('');
	self.HomeSupports = ko.observable('');
	self.Transportation = ko.observable('');
	self.LivingArrangement = ko.observable('');
	self.FreeNarrative = ko.observable('');
	self.GeneratedNarrative = ko.observable('');
	self.TransformedNarrative = ko.observable('');
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.SocialHistorySection.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.InstanceIdentifier =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.InstanceIdentifier';

	self.Root = ko.observable('');
	self.Extension = ko.observable('');
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.InstanceIdentifier.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.ImmunizationSection =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.ImmunizationSection';

	self.FreeNarrative = ko.observable('');
	self.GeneratedNarrative = ko.observable('');
	self.TransformedNarrative = ko.observable('');
	self.Immunizations = ko.observableArray([]);
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.ImmunizationSection.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.ImmunizationEntry =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.ImmunizationEntry';

	self.id = ko.observable(SEE.util.GUID());
	self.Author = ko.observable(new SEE.model.dto.Author());
	self.Name = ko.observable('');
	self.Route = ko.observable('');
	self.Dose = ko.observable('');
	self.Details = ko.observable('');
	self.EffectiveTime = ko.observable(new Date());
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.ImmunizationEntry.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.AllergySection =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.AllergySection';

	self.FreeNarrative = ko.observable('');
	self.GeneratedNarrative = ko.observable('');
	self.TransformedNarrative = ko.observable('');
	self.Allergies = ko.observableArray([]);
	self.KnownAdverseEvents = ko.observable('');
	self.PotentialAdverseEvents = ko.observable('');
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.AllergySection.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.AllergyEntry =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.AllergyEntry';

	self.id = ko.observable(SEE.util.GUID());
	self.Author = ko.observable(new SEE.model.dto.Author());
	self.AllergyType = ko.observable('');
	self.AllergyTo = ko.observable('');
	self.Severity = ko.observable('');
	self.Reaction = ko.observable('');
	self.NoticeDate = ko.observable(new Date());
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.AllergyEntry.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.AdvanceDirectivesEntry =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.AdvanceDirectivesEntry';

	self.ProxyInvoked = ko.observable('');
	self.HCPCompetency = ko.observable('');
	self.Resuscitation = ko.observable('');
	self.MedicationOnlyNoCPR = ko.observable('');
	self.VentilationRespiratoryDistress = ko.observable('');
	self.MayUseIntubation = ko.observable('');
	self.NonInvasiveVentilation = ko.observable('');
	self.NonInvasiveVentilationLimitedTrial = ko.observable('');
	self.UseOralIMorIVAntibiotics = ko.observable('');
	self.UseOralAntibioticsOnly = ko.observable('');
	self.UseOralAntibioticsOnlySymptomRelief = ko.observable('');
	self.MedicationAny = ko.observable('');
	self.MedicationAnyForSymptomRelief = ko.observable('');
	self.MedicationPainReliefOnly = ko.observable('');
	self.TransfusionsAnyBloodProduct = ko.observable('');
	self.AllowHospitalTransferAny = ko.observable('');
	self.AllowHospitalTransferSevere = ko.observable('');
	self.AllowHospitalTransferNone = ko.observable('');
	self.MedicalTestsAny = ko.observable('');
	self.MedicalTestsLimited = ko.observable('');
	self.GiveChronicDialysis = ko.observable('');
	self.ArtificiallyAdministerFluids = ko.observable('');
	self.Other = ko.observable('');
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.AdvanceDirectivesEntry.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.AdvanceDirectivesSection =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.AdvanceDirectivesSection';

	self.Author = ko.observable(new SEE.model.dto.Author());
	self.Directives = new SEE.model.dto.AdvanceDirectivesEntry();
	self.PrimaryHealthCareAgent = ko.observable(new SEE.model.dto.PersonInfo());
	self.AlternateHealthCareAgent = ko.observable(new SEE.model.dto.PersonInfo());
	self.OtherContacts = ko.observableArray([]);
	self.HealthcareProxyIsDifferent = ko.observable(false);
	self.FreeNarrative = ko.observable('');
	self.GeneratedNarrative = ko.observable('');
	self.TransformedNarrative = ko.observable('');
	self.DateOfForm = ko.observable('');
	self.VersionNumber = ko.observable('');
	self.ExpirationDate = ko.observable('');
	self.SignedPatientAttestation = ko.observable('');
	self.SignedNPAttestation = ko.observable(new SEE.model.dto.PersonInfo());
	self.SignedMDAttestation = ko.observable(new SEE.model.dto.PersonInfo());
	self.AdvanceDirectiveDocument = ko.observable('');
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.AdvanceDirectivesSection.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.MedicalEquipmentSection =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.MedicalEquipmentSection';

	self.MedicalEquipment = ko.observableArray([]);
	self.Supplies = ko.observableArray([]);
	self.FreeNarrative = ko.observable('');
	self.GeneratedNarrative = ko.observable('');
	self.TransformedNarrative = ko.observable('');
	self.Author = ko.observable(new SEE.model.dto.Author());
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.MedicalEquipmentSection.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.MedicalEquipmentEntry =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.MedicalEquipmentEntry';

	self.Name = ko.observable('');
	self.Details = ko.observable('');
	self.EffectiveTime = ko.observable(new Date());
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.MedicalEquipmentEntry.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.MedicalSupplyEntry =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.MedicalSupplyEntry';

	self.What = ko.observable('');
	self.Where = ko.observable('');
	self.When = ko.observable('');
	self.SuppliesOrdered = ko.observable(false);
	self.SuppliesSent = ko.observable(false);
	self.EffectiveTime = ko.observable(new Date());
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.MedicalSupplyEntry.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.PastIllnessSection =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.PastIllnessSection';

	self.FreeNarrative = ko.observable('');
	self.GeneratedNarrative = ko.observable('');
	self.TransformedNarrative = ko.observable('');
	self.PastIllnesses = ko.observableArray([]);
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.PastIllnessSection.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.PastIllnessEntry =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.PastIllnessEntry';

	self.id = ko.observable(SEE.util.GUID());
	self.Author = ko.observable(new SEE.model.dto.Author());
	self.Name = ko.observable('');
	self.ResolutionDate = ko.observable(new Date());
	self.DateOfOnset = ko.observable(new Date());
	self.CurrentSeverity = ko.observable('');
	self.WorstSeverity = ko.observable('');
	self.Diagnoser = ko.observable(new SEE.model.dto.PersonInfo());
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.PastIllnessEntry.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.DischargeDiagnosisSection =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.DischargeDiagnosisSection';

	self.DischargeDiagnosis = ko.observableArray([]);
	self.FreeNarrative = ko.observable('');
	self.GeneratedNarrative = ko.observable('');
	self.TransformedNarrative = ko.observable('');
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.DischargeDiagnosisSection.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.DischargeDiagnosisEntry =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.DischargeDiagnosisEntry';

	self.id = ko.observable(SEE.util.GUID());
	self.Author = ko.observable(new SEE.model.dto.Author());
	self.Name = ko.observable('');
	self.Code = ko.observable('');
	self.DateOfOnset = ko.observable(new Date());
	self.ResolutionDate = ko.observable('');
	self.Diagnoser = ko.observable(new SEE.model.dto.PersonInfo());
	self.CurrentSeverity = ko.observable('');
	self.CurrentSeverityName = ko.observable('');
	self.WorstSeverity = ko.observable('');
	self.WorstSeverityName = ko.observable('');
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.DischargeDiagnosisEntry.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.ProcedureSection =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.ProcedureSection';

	self.FreeNarrative = ko.observable('');
	self.GeneratedNarrative = ko.observable('');
	self.TransformedNarrative = ko.observable('');
	self.ProcedureOrders = ko.observableArray([]);
	self.CommonTreatments = ko.observableArray([]);
	self.SpecializedTreatments = ko.observableArray([]);
	self.OtherTreatments = ko.observableArray([]);
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.ProcedureSection.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.ProcedureOrderEntry =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.ProcedureOrderEntry';

	self.id = ko.observable(SEE.util.GUID());
	self.Author = ko.observable(new SEE.model.dto.Author());
	self.OrderId = ko.observable('');
	self.Name = ko.observable('');
	self.Orderer = ko.observable(new SEE.model.dto.PersonInfo());
	self.Amount = ko.observable('');
	self.Frequency = ko.observable('');
	self.Duration = ko.observable('');
	self.Outcome = ko.observable('');
	self.OrderDate = ko.observable(new Date());
	self.StartChangeDate = ko.observable(new Date());
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.ProcedureOrderEntry.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.TreatmentEntry =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.TreatmentEntry';

	self.id = ko.observable(SEE.util.GUID());
	self.Author = ko.observable(new SEE.model.dto.Author());
	self.Name = ko.observable('');
	self.Code = ko.observable('');
	self.Value = ko.observable('');
	self.EffectiveDate = ko.observable(new Date());
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.TreatmentEntry.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.PlanOfCareSection =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.PlanOfCareSection';

	self.Author = ko.observable(new SEE.model.dto.Author());
	self.ClinicalAssumingResponsibility = ko.observable(new SEE.model.dto.PersonInfo());
	self.ReceivedVerbalHandoff = ko.observable('');
	self.ShortTermGoals = ko.observableArray([]);
	self.LongTermGoals = ko.observableArray([]);
	self.ProblemSpecificGoals = ko.observableArray([]);
	self.GoalWeight = ko.observableArray([]);
	self.DailyWeightChecks = ko.observable('');
	self.Instructions = ko.observable(new SEE.model.dto.InstructionsAndFollowupPlans());
	self.HomecareSpecificIssues = ko.observable(new SEE.model.dto.HomecareSpecificIssues());
	self.VersionNumber = ko.observable('');
	self.BasedOnVersionNumber = ko.observable('');
	self.BasedOnSections = ko.observable('');
	self.SignificantChanges = ko.observable('');
	self.ForSpecificTeamMembers = ko.observable('');
	self.ReconciledBy = ko.observable(new SEE.model.dto.PersonInfo());
	self.DateReconciled = ko.observable(null);
	self.NurseReview = ko.observable(null);
	self.PhysicianReview = ko.observable(null);
	self.FreeNarrative = ko.observable('');
	self.GeneratedNarrative = ko.observable('');
	self.TransformedNarrative = ko.observable('');
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.PlanOfCareSection.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.Goal =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.Goal';

	self.DesiredOutcome = ko.observable('');
	self.Priority = ko.observable('');
	self.Details = ko.observable('');
	self.GoalDate = ko.observable(new Date());
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.Goal.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.ProblemSpecificGoal =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.ProblemSpecificGoal';

	self.DesiredOutcome = ko.observable('');
	self.Milesones = ko.observable('');
	self.Barriers = ko.observable('');
	self.Progress = ko.observable('');
	self.GoalDate = ko.observable(new Date());
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.ProblemSpecificGoal.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.InstructionsAndFollowupPlans =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.InstructionsAndFollowupPlans';

	self.ProposedInterventions = ko.observable('');
	self.DegreeOfAcceptance = ko.observable('');
	self.DegreeOfDiagnosticUncertainty = ko.observable('');
	self.Perception = ko.observable('');
	self.ScheduledAppointments = ko.observable('');
	self.DischargeMedicationList = ko.observable('');
	self.RedFlags = ko.observable('');
	self.IdentifiedLearner = ko.observable('');
	self.SpecialDiet = ko.observable('');
	self.TestResultsPendingAtDischarge = ko.observable('');
	self.WhoFollowsUp = ko.observable('');
	self.ResultNumbers = ko.observable('');
	self.ExpectedOutcomes = ko.observable('');
	self.WoundCareSheetAttached = ko.observable('');
	self.WoundVACDressing = ko.observable('');
	self.WoundVACDressingSetting = ko.observable('');
	self.WoundVACDressingChanger = ko.observable('');
	self.WoundVACDressingFrequency = ko.observable('');
	self.WoundVACDressingTeachingMaterials = ko.observable('');
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.InstructionsAndFollowupPlans.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.HomecareSpecificIssues =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.HomecareSpecificIssues';

	self.Address = ko.observable('');
	self.Homebound = ko.observable(false);
	self.F2F = ko.observable(false);
	self.SpecificConditionsRequiringIntervention = ko.observable('');
	self.StartOfCare = ko.observable(null);
	self.VerbalOrdersIssued = ko.observable(null);
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.HomecareSpecificIssues.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.SectionLockInfo =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.SectionLockInfo';

	self.LockedBy = new SEE.model.dto.User();
	self.LockTime = new Date();
	self.Lock = '';
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.SectionLockInfo.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.HistoryEvent =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.HistoryEvent';

	self.Author = new SEE.model.dto.User();
	self.Event = '';
	self.SectionName = '';
	self.SourceDocumentId = '';
	self.SourceDocumentTitle = '';
	self.TargetDocumentTitle = '';
	self.TargetDocumentId = '';
	self.EventTime = new Date();
	self.EventDirection = SEE.enum.EventDirectionCode.IN;
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.HistoryEvent.inheritsFrom(SEE.model.BaseModel);
//#########################################################

SEE.model.dto.DocumentHistory =  function () {
	SEE.model.BaseModel.prototype.init.call(this);
	var self = this;

	self._SEE_Type = 'SEE.model.dto.DocumentHistory';

	self.HistoricalEvents = [];
	self.NewEvents = [];
	if (self.init) {
	    self.init();
	}
};
SEE.model.dto.DocumentHistory.inheritsFrom(SEE.model.BaseModel);
//#########################################################

	